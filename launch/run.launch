<?xml version="1.0"?>

<launch>
  <arg name="project" default="hdl_localization"/>
  
  <!--- Sim Time -->
  <param name="use_sim_time" value="false" />
  
  <!--- Image transparent -->
  <node pkg="image_transport" type="republish" name="republish" args="compressed in:=/usb_cam/image_raw raw out:=/usb_cam/image_raw_down" output="screen"/>

  <!--- Run Logo-->
  <node pkg="image_publisher" type="image_publisher" name="image_publisher"
        args="$(find hdl_localization)/config/images/stryx_logo.png">
    <param name="flip_horizontal" value="false" />
    <param name="flip_vertical" value="false" />
    <param name="publish_rate" value="1" />
  </node>

  <!--- Run Rviz-->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hdl_localization)/rviz/stryx_viewer.rviz" />
  
  <!-- Parameters -->
  <rosparam file="$(find hdl_localization)/config/params.yaml" command="load" /> 
  
  <param name="robot_description" command="$(find xacro)/xacro $(find hdl_localization)/config/robot.urdf.xacro --inorder" />
   
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" />
    
  <!-- EKF GPS-->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_gps" respawn="true" />

  <!-- Navsat -->
  <node pkg="robot_localization" type="navsat_transform_node" name="navsat" respawn="true">
      <remap from="imu/data" to="imu_correct" />
      <remap from="gps/fix" to="pwk7/gps/fix" />
  </node>
    
  <!-- arguments -->
  <arg name="nodelet_manager" default="standalone_nodelet" />
  <arg name="points_topic" default="velodyne_points" />
  <arg name="imu_topic" default="mti30/imu/data" />

  <!-- in case you use velodyne_driver, comment out the following line -->
  <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

    <!-- globalmap_server_nodelet -->
    <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
        <param name="globalmap_pcd" value="$(find hdl_localization)/data/yonsei_full_map.pcd" />
        <param name="downsample_resolution" value="0.5" />
    </node>

    <!-- hdl_localization_nodelet -->
    <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
        <remap from="/velodyne_points" to="$(arg points_topic)" />
        <remap from="/gpsimu_driver/imu_data" to="$(arg imu_topic)" />
        
        <!-- imu settings -->
        <!-- during "cool_time", imu inputs are ignored -->
        <param name="use_imu" value="true" />
        <param name="invert_imu" value="false" />
        <param name="cool_time_duration" value="2.0" />
        
        <!-- ndt settings -->
        <!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
        <param name="ndt_neighbor_search_method" value="DIRECT7" />
        <param name="ndt_resolution" value="1.0" />
        <param name="downsample_resolution" value="0.1" />
        <!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
        <!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
        <param name="specify_init_pose" value="false" />
        <param name="init_pos_x" value="0.0" />
        <param name="init_pos_y" value="0.0" />
        <param name="init_pos_z" value="0.0" />
        <param name="init_ori_w" value="1.0" />
        <param name="init_ori_x" value="0.0" />
        <param name="init_ori_y" value="0.0" />
        <param name="init_ori_z" value="0.0" />
    </node>
    
    <!--- Initial Pose Node -->
    <node pkg="$(arg project)" type="pubInitialPose" name="pubInitialPose" output="screen" respawn="true">
        <rosparam param="map_origin">[37.560991036666664, 126.93699022999999]</rosparam>
    </node>

    <!--- Start UI Node -->
    <node pkg="localization_ui" type="localization_ui" name="localization_ui" output="screen" respawn="true">
        <rosparam param="map_origin">[37.560991036666664, 126.93699022999999, 28.1200008392334]</rosparam>
    </node>    
    
    <!--- Publish fake gps Coordinate -->
    <node pkg="rostopic" type="rostopic" name="fake_gps_map" args="pub /gps/map sensor_msgs/NavSatFix
    '{header: {frame_id: map}, latitude: 37.560991036666664, longitude: 126.93699022999999, altitude: 28.1200008392334}'" />
    
</launch>
